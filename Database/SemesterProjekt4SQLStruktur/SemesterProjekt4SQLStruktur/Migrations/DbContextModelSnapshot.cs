// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SemesterProjekt4SQLStruktur;

namespace SemesterProjekt4SQLStruktur.Migrations
{
    [DbContext(typeof(DbContext))]
    partial class DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SemesterProjekt4SQLStruktur.Group", b =>
                {
                    b.Property<int>("GroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerID")
                        .HasColumnType("int");

                    b.HasKey("GroupID");

                    b.HasIndex("OwnerID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("SemesterProjekt4SQLStruktur.Item", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SemesterProjekt4SQLStruktur.ItemRecipe", b =>
                {
                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("RecipeID")
                        .HasColumnType("int");

                    b.HasKey("ItemID", "RecipeID");

                    b.HasIndex("RecipeID");

                    b.ToTable("ItemRecipe");
                });

            modelBuilder.Entity("SemesterProjekt4SQLStruktur.Pantry", b =>
                {
                    b.Property<int>("PantryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GroupID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PantryID");

                    b.HasIndex("GroupID");

                    b.ToTable("Pantries");
                });

            modelBuilder.Entity("SemesterProjekt4SQLStruktur.PantryItem", b =>
                {
                    b.Property<int>("PantryID")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("PantryID", "ItemID");

                    b.HasIndex("ItemID");

                    b.ToTable("PantryItem");
                });

            modelBuilder.Entity("SemesterProjekt4SQLStruktur.Recipe", b =>
                {
                    b.Property<int>("RecipeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipeID");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("SemesterProjekt4SQLStruktur.ShoppingList", b =>
                {
                    b.Property<int>("ShoppingListID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GroupID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShoppingListID");

                    b.HasIndex("GroupID");

                    b.ToTable("ShoppingLists");
                });

            modelBuilder.Entity("SemesterProjekt4SQLStruktur.ShoppingListItem", b =>
                {
                    b.Property<int>("ShoppingListID")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("ShoppingListID", "ItemID");

                    b.HasIndex("ItemID");

                    b.ToTable("ShoppingListItem");
                });

            modelBuilder.Entity("SemesterProjekt4SQLStruktur.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SemesterProjekt4SQLStruktur.UserGroup", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("GroupID")
                        .HasColumnType("int");

                    b.HasKey("UserID", "GroupID");

                    b.HasIndex("GroupID");

                    b.ToTable("UserGroup");
                });

            modelBuilder.Entity("SemesterProjekt4SQLStruktur.Group", b =>
                {
                    b.HasOne("SemesterProjekt4SQLStruktur.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerID");
                });

            modelBuilder.Entity("SemesterProjekt4SQLStruktur.ItemRecipe", b =>
                {
                    b.HasOne("SemesterProjekt4SQLStruktur.Item", "item")
                        .WithMany("ItemRecipes")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SemesterProjekt4SQLStruktur.Recipe", "Recipe")
                        .WithMany("ItemRecipes")
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SemesterProjekt4SQLStruktur.Pantry", b =>
                {
                    b.HasOne("SemesterProjekt4SQLStruktur.Group", "Group")
                        .WithMany("Pantries")
                        .HasForeignKey("GroupID");
                });

            modelBuilder.Entity("SemesterProjekt4SQLStruktur.PantryItem", b =>
                {
                    b.HasOne("SemesterProjekt4SQLStruktur.Item", "Item")
                        .WithMany("PantryItems")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SemesterProjekt4SQLStruktur.Pantry", "Pantry")
                        .WithMany("PantryItems")
                        .HasForeignKey("PantryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SemesterProjekt4SQLStruktur.ShoppingList", b =>
                {
                    b.HasOne("SemesterProjekt4SQLStruktur.Group", "Group")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("GroupID");
                });

            modelBuilder.Entity("SemesterProjekt4SQLStruktur.ShoppingListItem", b =>
                {
                    b.HasOne("SemesterProjekt4SQLStruktur.Item", "Item")
                        .WithMany("ShoppingListItems")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SemesterProjekt4SQLStruktur.ShoppingList", "ShoppingList")
                        .WithMany("ShoppingListItems")
                        .HasForeignKey("ShoppingListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SemesterProjekt4SQLStruktur.UserGroup", b =>
                {
                    b.HasOne("SemesterProjekt4SQLStruktur.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SemesterProjekt4SQLStruktur.User", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
